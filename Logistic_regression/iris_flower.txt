# Load libraries
import numpy as np
import pandas
from pandas.tools.plotting import scatter_matrix
import matplotlib.pyplot as plt
from sklearn import model_selection
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
import seaborn as sns
import datetime

# Load dataset
url = "/Users/umasankarsahoo/Desktop/ML_training_b1_May2018/Programs/Logistic_regression/iris_flowers.CSV"
names = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'class']
dataset = pandas.read_csv(url, names=names)
print(dataset.shape)
print(dataset.head(20))
print(dataset.info())
# descriptions
print(dataset.describe())

# class distribution
print(dataset.groupby('class').size())


# box and whisker plots
dataset.plot(kind='box', subplots=True, layout=(2,2), sharex=False, sharey=False)
plt.show()

print('hellooooooooo')
sns.countplot(x="class", data=dataset)

# histograms
dataset.hist()
plt.show()


# scatter plot matrix
pandas.plotting.scatter_matrix(dataset)
plt.show()


# Split-out validation dataset
array = dataset.values
X = array[:,0:4]
Y = array[:,4]
validation_size = 0.20
seed = 7
X_train, X_validation, Y_train, Y_validation = model_selection.train_test_split(X, Y, test_size=validation_size, random_state=seed)


# Test options and evaluation metric
seed = 7
scoring = 'accuracy'

# Make predictions on validation dataset
Logistic_regression_model = LogisticRegression()
Logistic_regression_model.fit(X_train, Y_train)
predictions = Logistic_regression_model.predict(X_validation)
print(accuracy_score(Y_validation, predictions))
print(confusion_matrix(Y_validation, predictions))
print(classification_report(Y_validation, predictions))
a=[[5.9,3.0,5.1,1.9]]
#b=np.reshape(a, (-1, 2))
predictions1 = Logistic_regression_model.predict(a)
print(predictions1)

